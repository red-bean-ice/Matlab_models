close all; clear all; clc;
% building a string of springs
NDIM = 2;%dimention 2D
%set up the basic structure
num_nodes = 3;
num_links = 2;

%The arrays that link the nodes
jj = zeros(num_links,1);
kk = zeros(num_links,1);

% set numerical parameters
T_clock = 60;% meaning 60 minutes
dt = 0.95;

% set physical parameters
omega = 2*pi/T_clock;
M = zeros(num_nodes,1); % mass of nodes
S = zeros(num_links,1); % link spring constant
D = zeros(num_links,1); % link dashpot constant
%Masses and the spring constant
M(1) = 0.8; 
M(2) = 1; 
M(3) = 0.8;
S(1) = 1.2;
S(2) = 1.2;
D(1) = 1;
D(2) = 1;

% set positions of nodes
X = zeros(num_nodes, NDIM);
X(1,1) = 0; % node 1
X(1,2) = 1;
X(2,1) = 0; % node 2
X(2,2) = 0;
X(3,1) = 0; % node 3
X(3,2) = 2;

% build structure by creating links
jj(1) = 1; % link 1
kk(1) = 2;
jj(2) = 2; % link 2
kk(2) = 3;

%plot the initial structure
figure(1);
x = X(jj,1);
y = X(jj,2);
m = X(kk,1);
n = X(kk,2);
plot(m',n','linewidth',8)
xlim([-3 3])
ylim([-3 3])
hold on
plot(x',y','linewidth',8)

%Build a mechanic clock
center = [0 0]; % center of the clock
% specify free nodes with prescribed displacement
free_nodes = [1,3];
% initialize rest length
DX = X(jj,:) - X(kk,:);
Rzero = sqrt(sum(DX.^2,2));

Len_mh=Rzero(2);%length of the minute hand
Len_hh=Rzero(1);%length of the hour hand
%%Initialize video
%myVideo = VideoWriter('myVideoFile'); %open video file
%myVideo.FrameRate = 10;  %can adjust this, 5 - 10 works well for me
%open(myVideo)

for t=0:dt:T_clock
    
    theta = pi/2-t*omega; %the angle by which the minute hand spins
    gamma=pi/2-t*omega/12; %the angle by which the hour hand spins
    X(free_nodes(2),:) = center+Len_mh*[cos(theta),sin(theta)];
    X(free_nodes(1),:) = center+Len_hh*[cos(gamma),sin(gamma)];
    figure(2);
    m1 = [X(kk,1),X(jj,1)];
    n1 = [X(kk,2),X(jj,2)];
    plot(m1',n1','linewidth',8)
    grid on
    xlim([-5 5])
    ylim([-5 5])
    pause(0.01)
    %frame = getframe(gcf); %get frame
    %writeVideo(myVideo, frame);
    
end
%close(myVideo)
% initialize velocities to zero
U = zeros(num_nodes, NDIM);


%reset the positions
X(1,1) = 0; % node 1
X(1,2) = 1;
X(2,1) = 0; % node 2
X(2,2) = 0;
X(3,1) = 0; % node 3
X(3,2) = 2;
X_copy=X;
omega_hh=2*pi/(12*T_clock);%angular velocity of the hour hand
omega_mh=2*pi/T_clock;%angular velocity of the minute hand

U(free_nodes(1),:)=[omega_hh*Len_hh 0];%initial velocity for the hour hand
U(free_nodes(2),:)=[omega_mh*Len_mh 0];%initial velocity for the minute hand
x_hh=[]; %store hour hand position updated by the program
x_mh=[]; %store minute hand position updated by the program
x_mech_hh=[]; %store hour hand position controlled by human
x_mech_mh=[]; %store minute hand position controlled by human
%myVideo = VideoWriter('myVideoFile'); %open video file
%myVideo.FrameRate = 7;  %can adjust this, 5 - 10 works well for me
%open(myVideo)
for t=0:dt:12*T_clock
    
    DX = X(jj,:) - X(kk,:);
    DU = U(jj,:) - U(kk,:);  
    R = sqrt(sum(DX.^2,2));
    T = S.*(R - Rzero) + (D./R).*sum(DX.*DU,2);
    TR = T./R;
    FF = [TR TR].*DX;

    F = zeros(num_nodes, NDIM);
    % compute forces on the nodes
    for l = 1:num_links
    	F(kk(l),:) = F(kk(l),:) + FF(l,:);
       	F(jj(l),:) = F(jj(l),:) - FF(l,:);	
    end
    
    figure(3);
    x = [X(jj,1) X(kk,1)];
    y = [X(jj,2) X(kk,2)];
    plot(x',y','linewidth',8)
    grid on
    xlim([-5 5])
    ylim([-5 5])
    pause(0.01)
    %frame = getframe(gcf); %get frame
    %writeVideo(myVideo, frame);
    
    % update the free nodes
    U(free_nodes(1),:) = U(free_nodes(1),:) + dt*F(free_nodes(1),:)./[M(free_nodes(1)) M(free_nodes(1))];
    X(free_nodes(1),:) = X(free_nodes(1),:) + dt*U(free_nodes(1),:);
    U(free_nodes(2),:) = U(free_nodes(2),:) + dt*F(free_nodes(2),:)./[M(free_nodes(2)) M(free_nodes(2))];
    X(free_nodes(2),:) = X(free_nodes(2),:) + dt*U(free_nodes(2),:);
    
    x_hh = [x_hh;X(1,:)]; %list to store all the positional values of the hour hand
    x_mh = [x_mh;X(3,:)]; %list to store all the positional values of the minute hand 
    
    theta1 = pi/2-t*omega;
    gamma1=pi/2-t*omega/12;
    X_copy(free_nodes(2),:) = center+Len_mh*[cos(theta1),sin(theta1)];
    X_copy(free_nodes(1),:) = center+Len_hh*[cos(gamma1),sin(gamma1)];
    x_mech_hh=[x_mech_hh;X_copy(1,:)];
    x_mech_mh=[x_mech_mh;X_copy(3,:)];
end

figure(4)
plot(x_mech_hh(:,1),x_mech_hh(:,2),'linewidth',1);
hold on
plot(x_hh(:,1),x_hh(:,2),'linewidth',2);
grid on
xlim([-5 5])
ylim([-5 5])
legend('circle','trail')
axis equal

figure(5)
plot(x_mech_mh(:,1),x_mech_mh(:,2),'linewidth',0.8);
hold on
plot(x_mh(:,1),x_mh(:,2),'linewidth',0.8);
grid on
xlim([-2.5 2.5])
ylim([-2.5 2.5])
legend('circle','trail')
axis equal
